# name: Deploy app

# on:
#   push:
#     branches:
#       - main

# jobs:
#   create-deployment-artifact:
#     name: Create Deployment Artifact
#     runs-on: ubuntu-latest
#     outputs:
#       deployment-matrix: ${{ steps.export-deployment-matrix.outputs.deployment-matrix }}
#     steps:
#       - name: Checkout code
#         uses: actions/checkout@v4

#       - name: Set up PHP
#         uses: shivammathur/setup-php@v2
#         with:
#           php-version: "8.2" # أو النسخة اللي مشروعك شغال عليها
#           extensions: mbstring, bcmath, intl, pcntl

#       - name: Install Composer dependencies
#         run: composer update --no-dev --no-interaction --no-progress --no-suggest --prefer-dist --optimize-autoloader

#       - name: Install Node dependencies
#         run: npm install

#       - name: Compile Assets
#         run: npm run build

#       - name: Create deployment artifact
#         env:
#           GIT_SHA: ${{ github.sha }}
#         run: |
#           zip -r ${{ github.sha }}.zip . \
#             -x "*.git*" \
#                "node_modules/*" \
#                "tests/*" \
#                "storage/logs/*" \
#                "storage/debugbar/*" \
#                "storage/framework/cache/data/*" \
#                "storage/framework/sessions/*" \
#                "storage/framework/views/*" \
#                ".github/workflows/*"

#       - name: Upload deployment artifact
#         uses: actions/upload-artifact@v4
#         with:
#           name: app_build
#           path: ${{ github.sha }}.zip

#       - name: Export deployment matrix
#         id: export-deployment-matrix
#         run: |
#           JSON="$(cat ./deployment-config.json)"
#           JSON="${JSON//'%'/'%25'}"
#           JSON="${JSON//$'\n'/'%0A'}"
#           JSON="${JSON//$'\r'/'%0D'}"
#           echo "::set-output name=deployment-matrix::$JSON"

#   prepaire-release-on-server:
#     name: Prepaire release on server
#     runs-on: ubuntu-latest
#     needs: create-deployment-artifact
#     strategy:
#       matrix:
#         server: ${{ fromJson(needs.create-deployment-artifact.outputs.deployment-matrix) }}
#     steps:
#       - name: Download deployment artifact
#         uses: actions/download-artifact@v4
#         with:
#           name: app_build

#       - name: Download deployment artifact
#         uses: actions/download-artifact@v4
#         with:
#           name: app_build

#       - name: Extract artifact locally
#         run: unzip -o ${{ github.sha }}.zip -d app_build

#       - name: Deploy to FTP
#         uses: SamKirkland/FTP-Deploy-Action@v4.3.5
#         with:
#           server: ${{ matrix.server.ip }}
#           username: ${{ matrix.server.username }}
#           password: ${{ matrix.server.password }}
#           local-dir: app_build/
#           server-dir: ${{ matrix.server.path }}
#           protocol: ftp  # أو ftps إذا السيرفر يدعم FTPS
